@page "/"
@using Car_Rental.Common.Enums;
@using Car_Rental.Common.Interfaces;
@using Car_Rental.Business.Classes;
@inject BookingProcessor bp



<PageTitle>Car Rantal</PageTitle>
<h1>Car Rental</h1>
@if (bp.ErrorMessage != string.Empty)
{
    <div class="mb-4 alert alert-danger" style="width:350px">
        <strong>Error</strong> @bp.ErrorMessage
    </div>
}

<div class="input-group mb-3" style="width: 250px">
    <label class="input-group-text">Filter</label>
    <select class="form-select" @bind="bp.Filter">
        <option value="" selected>View All</option>
        <option value="@VehicleStatuses.Available">Available</option>
        <option value="@VehicleStatuses.Booked">Booked</option>
    </select>
</div>

<div class="row">
    <table class="table table-borderless border border-dark flex-direction" style="max-width: 75%">
        <thead class="table-dark mb-2">
            <tr>
                <th value="reNo" scope="col">RegNo</th>
                <th scope="col">Make</th>
                <th scope="col">Odometer</th>
                <th scope="col">Cost Km</th>
                <th scope="col">Vehicle Type</th>
                <th scope="col">$Day</th>
                <th scope="col">Action</th>
                <th scope="col">Status</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td><input type="text" class="form-control-sm" disabled="@bp.IsTaskRunning" placeholder="RegNo" @bind="bp.NewVehicle.RegNo" /></td>
                <td><input type="text" class="form-control-sm" disabled="@bp.IsTaskRunning" placeholder="Make" @bind="bp.NewVehicle.Make" /></td>
                <td><input type="text" class="form-control-sm" disabled="@bp.IsTaskRunning" @bind="bp.NewVehicle.Odometer" /></td>
                <td><input type="text" class="form-control-sm" disabled="@bp.IsTaskRunning" @bind="bp.NewVehicle.CostKm" /></td>
                <td>
                    <select class="form-select border border-dark" disabled="@bp.IsTaskRunning" @bind="bp.NewVehicle.Type">
                        <option value="" selected></option>
                        @foreach(var type in bp.VehicleTypeNames)
                        {
                            <option value="@bp.GetVehicleType(type)">@type</option>
                        }
                    </select>
                </td>
                <td>@((int)bp.NewVehicle.Type)</td>
                <td>
                    <button class="btn btn-sm btn-outline-success align-self-stretch" disabled="@bp.IsTaskRunning" @onclick="() =>bp.AddVehicle(bp.NewVehicle.Make,bp.NewVehicle.RegNo,bp.NewVehicle.Odometer, bp.NewVehicle.CostKm,VehicleStatuses.Available,bp.NewVehicle.Type)">Add</button>
                </td>
                <td>
                    @if(bp.IsTaskRunning)
                    {
                        <span class="badge bg-warning">Processing</span>
                    }                                                                                               
                </td>
            </tr>
            @foreach(var vehicle in bp.GetVehicles())
            {
                <tr>
                    <th scope="row">@vehicle.RegNo</th>
                    <td>@vehicle.Make</td>
                    <td>@vehicle.Odometer</td>
                    <td>@vehicle.CostKm</td>
                    <td>@vehicle.Type</td>
                    <td>@vehicle.CostDay</td>
                    <td>
                        @if (vehicle.Status.Equals(VehicleStatuses.Available))
                        {
                            <div class="input-group-sm d-flex">
                                <select class="form-select border border-dark" id="inputGroupSelect04" disabled="@bp.IsTaskRunning" @bind="bp.NewCustomer.Id">
                                    @foreach (var customer in bp.GetCustomers())
                                    {
                                        <option value="@customer.Id">@customer.CustomerInformation</option>
                                    }
                                </select>
                                <button class="btn btn-sm btn-outline-primary" type="button" style="min-width: 3vW" disabled="@bp.IsTaskRunning" @onclick="() => bp.RentVehicleAsync(vehicle.Id, bp.NewCustomer.Id)">
                                    Rent
                                </button>
                            </div>                           
                        }
                        else
                        {
                            <div class="input-group-sm d-flex">
                                <input type="text" class="form-control-sm" disabled="@bp.IsTaskRunning" @bind="bp.NewBooking.Distance" />
                                <button class="btn btn-sm btn-outline-success" style="min-width: 3vW" disabled="@bp.IsTaskRunning" @onclick="()=> bp.ReturnVehicle(vehicle.Id, bp.NewBooking.Distance)">Return</button>
                            </div>                       
                        }                                             
                    </td>
                    <td>
                        @if (vehicle.Status.Equals(VehicleStatuses.Available))
                        {
                            <span class="badge bg-success">Available</span>
                        }
                        else
                        {
                            <span class="badge bg-danger">Booked</span>
                        }                        
                    </td>
                </tr>
            }
            
        </tbody>
    </table>
</div>

<br />

<div class="row">
    <table class="table border border-secondary" style="max-width: 75%">
        <thead class="table-dark">
            <tr>
                <th scope="col">RegNo</th>
                <th scope="col">Costumer</th>
                <th scope="col">Km Rented</th>
                <th scope="col">Km Returned</th>
                <th scope="col">Rented</th>
                <th scope="col">Returned</th>
                <th scope="col">Cost</th>
                <th scope="col">Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var booking in bp.GetBookings())
            {
                if (booking.RentalStatus)
                {
                    <tr>
                        <th scope="row">@booking.Vehicle.RegNo</th>
                        <td>@booking.Customer.CustomerInformation</td>
                        <td>@booking.OdometerBeforeRent</td>
                        <td></td>
                        <td>@booking.DayOfRent.ToString("MM/dd/yyyy")</td>
                        <td></td>
                        <td></td>
                        <td>
                            <span class="badge bg-danger">Open</span>
                        </td>
                    </tr>
                }
                else
                {
                    <tr>
                        <th scope="row">@booking.Vehicle.RegNo</th>
                        <td>@booking.Customer.CustomerInformation</td>
                        <td>@booking.OdometerBeforeRent</td>
                        <td>@booking.Vehicle.Odometer</td>
                        <td>@booking.DayOfRent.ToString("MM/dd/yyyy")</td>
                        <td>@booking.DayOfReturn.ToString("MM/dd/yyyy")</td>
                        <td>@booking.Cost</td>
                        <td>
                            <span class="badge bg-success">Closed</span>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

<br />

<div class="row">
    <table class="table border border-dark" style="max-width: 40%">
        <thead class="table-dark mb-3">
            <tr>
                <th>SSN</th>
                <th>Last Name</th>
                <th>First Name</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td><input type="text" class="form-control-sm" placeholder="YYMMDD" @bind="bp.NewCustomer.SocialSecurityNumber" /></td>
                <td><input type="text" class="form-control-sm" placeholder="Last Name" @bind="bp.NewCustomer.LastName" /></td>
                <td><input type="text" class="form-control-sm" placeholder="First Name" @bind="bp.NewCustomer.FirstName" /></td>
                <td>
                    <button class="btn btn-sm btn-outline-success" @onclick="() =>bp.AddCustomer(bp.NewCustomer.FirstName, bp.NewCustomer.LastName, bp.NewCustomer.SocialSecurityNumber)">Add</button>
                </td>
            </tr>
            @foreach (var customer in bp.GetCustomers())
            {
                <tr>
                    <th scope="row">@customer.SocialSecurityNumber</th>
                    <td>@customer.LastName</td>
                    <td>@customer.FirstName</td>
                    <td></td>
                </tr>
            }
        </tbody>
    </table>
</div>


